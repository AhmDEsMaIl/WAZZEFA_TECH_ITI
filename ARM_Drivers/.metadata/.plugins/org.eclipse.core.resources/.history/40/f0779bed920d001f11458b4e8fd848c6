
/************************************************************************/
/*							FILES INCLUSIONS							*/
/************************************************************************/

/***********************LIB*************************/

#include "../include/LIB/BIT_MATH.h"
#include "../include/LIB/STD_Types.h"


/************************MCAL***********************/
#include "../include/MCAL/MRCC/MRCC_Interface.h"
#include "../include/MCAL/MGPIO/MGPIO_Interface.h"
#include "../include/MCAL/MNVIC/MNVIC_Interface.h"
#include "../include/MCAL/MEXTI/MEXTI_Interface.h"
#include "../include/MCAL/MSTK/MSTK_Interface.h"



/************************HAL***********************/
#include "../include/HAL/HLCD/LCD_Interface.h"
#include "../include/HAL/KEYPAD/KEYPAD_Interface.h"
#include "../include/HAL/HLEDMRX/HLEDMRX_Interface.h"
#include "../include/HAL/HIR/HIR_Interface.h"


/************************SRVICES***********************/

#include "../include/SERVICES/SRTOS/SRTOS_Interface.h"
//************************PROTOTYPES***********************/
void func1(void);
void func2(void);
void func3(void);
u8 u8Data;
void func1(void)
{
	MGPIO_voidSetPinValue(GPIO_PORTB , GPIO_PIN0,GPIO_PIN_HIGH);
}
void func2(void)
{
	MGPIO_voidSetPinValue(GPIO_PORTB , GPIO_PIN1,GPIO_PIN_HIGH);
}
void func3(void)
{
	MGPIO_voidSetPinValue(GPIO_PORTB , GPIO_PIN2,GPIO_PIN_HIGH);
}


void main (void)
{


	// enable RCC
	MRCC_voidInit();

	// Clocks to usage Peripherals Enable (use RCC)

	MRCC_voidEnablePeripheral(RCC_AHB1 , RCC_AHB1_GPIOA);
	MRCC_voidEnablePeripheral(RCC_AHB1 , RCC_AHB1_GPIOB);
	MRCC_voidEnablePeripheral(RCC_APB2 , RCC_APB2_SYSCFG);

	MGPIO_voidSetPinMode(GPIO_PORTA , GPIO_PIN0 , GPIO_INPUT);
	MGPIO_voidSetPinInputMode(GPIO_PORTA , GPIO_PIN0 , GPIO_PULLUP);

	MGPIO_voidSetPinMode(GPIO_PORTB , GPIO_PIN0 , GPIO_OUTPUT);
	MGPIO_voidSetPinMode(GPIO_PORTB , GPIO_PIN1 , GPIO_OUTPUT);
	MGPIO_voidSetPinMode(GPIO_PORTB , GPIO_PIN2 , GPIO_OUTPUT);
	MGPIO_voidSetPinOutputMode(GPIO_PORTB , GPIO_PIN0,GPIO_PUSH_PULL,GPIO_LOW_SPEED);
	MGPIO_voidSetPinOutputMode(GPIO_PORTB , GPIO_PIN1,GPIO_PUSH_PULL,GPIO_LOW_SPEED);
	MGPIO_voidSetPinOutputMode(GPIO_PORTB , GPIO_PIN2,GPIO_PUSH_PULL,GPIO_LOW_SPEED);

	HIR_voidInit();


	while (1)
	{
		HIR_u8GetValue(&u8Data);
		// LEDMRX SEt array
		switch (u8Data)
		{
		case 0:
			break;
		case 1:
			func1();

			break;
		case 2:
			func2();

			break;
		case 4:
			func3();

			break;
		default :
			break;

		}


	}

}


