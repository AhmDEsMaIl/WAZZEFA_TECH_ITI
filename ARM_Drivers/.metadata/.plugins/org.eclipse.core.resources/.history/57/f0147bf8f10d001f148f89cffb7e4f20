
/************************************************************************/
/*							FILES INCLUSIONS							*/
/************************************************************************/

/***********************LIB*************************/

#include "../include/LIB/BIT_MATH.h"
#include "../include/LIB/STD_Types.h"


/************************MCAL***********************/
#include "../include/MCAL/MRCC/MRCC_Interface.h"
#include "../include/MCAL/MGPIO/MGPIO_Interface.h"
#include "../include/MCAL/MNVIC/MNVIC_Interface.h"
#include "../include/MCAL/MEXTI/MEXTI_Interface.h"
#include "../include/MCAL/MSTK/MSTK_Interface.h"
#include "../include/MCAL/MUART/MUART_Interface.h"



/************************HAL***********************/
#include "../include/HAL/HLCD/LCD_Interface.h"
#include "../include/HAL/KEYPAD/KEYPAD_Interface.h"
#include "../include/HAL/HLEDMRX/HLEDMRX_Interface.h"
#include "../include/HAL/HIR/HIR_Interface.h"


/************************SRVICES***********************/

#include "../include/SERVICES/SRTOS/SRTOS_Interface.h"
//************************PROTOTYPES***********************/


void main (void)
{
	u8 u8Data=0;

	// enable RCC
	MRCC_voidInit();

	// Clocks to usage Peripherals Enable (use RCC)

	MRCC_voidEnablePeripheral(RCC_AHB1 , RCC_AHB1_GPIOA);
	MRCC_voidEnablePeripheral(RCC_APB2 , RCC_APB2_USART1);

	MGPIO_voidSetPinMode(GPIO_PORTA , GPIO_PIN0 , GPIO_INPUT);
	MGPIO_voidSetPinInputMode(GPIO_PORTA , GPIO_PIN0 , GPIO_PULLUP);
	MGPIO_voidSetPinAlternateFunctionMode(GPIO_PORTA , GPIO_PIN9 ,GPIO_ALT_FUNC);
	MGPIO_voidSetPinAlternateFunctionMode(GPIO_PORTA , GPIO_PIN10 ,GPIO_ALT_FUNC);

	MGPIO_voidSetPinAlternateFunctionMode(GPIO_PORTA , GPIO_PIN9 ,7);
	MGPIO_voidSetPinAlternateFunctionMode(GPIO_PORTA , GPIO_PIN10 ,7);


	MGPIO_voidSetPinMode(GPIO_PORTA , GPIO_PIN0 ,GPIO_OUTPUT);

	MGPIO_voidSetPinOutputMode(GPIO_PORTA , GPIO_PIN0 ,GPIO_PUSH_PULL,GPIO_LOW_SPEED);

	MGPIO_voidSetPinMode(GPIO_PORTA , GPIO_PIN1 ,GPIO_OUTPUT);
	MGPIO_voidSetPinOutputMode(GPIO_PORTA , GPIO_PIN1 ,GPIO_PUSH_PULL,GPIO_LOW_SPEED);

	MUSART_voidInit();
	u8 data;
	while (1)
	{
		MUSART_voidSendByteSynch(5);
		data=MUSART_voidReceiveByte();
		if(data=='O')
		{
			MGPIO_voidSetPinValue(GPIO_PORTA , GPIO_PIN1 ,GPIO_PIN_HIGH);
		}
		else if (data=='N')
		{
			MGPIO_voidSetPinValue(GPIO_PORTA , GPIO_PIN1 ,GPIO_PIN_HIGH);

		}

	}

}


